version: 1.2.0
services:
  - mysql
  - php:
      version: 7.1

variables:
# Enter your Acquia application variables here.
  global:
    SITENAME: $PIPELINE_CLOUD_SITE
    # The Acquia Cloud application name or site name.
    # By default, we let Pipelines detect this and set this.
    ENVIRONMENT:
    # The Acquia Cloud environment
    # This can be used for code deployment purposes
    DATABASE: $PIPELINE_CLOUD_SITE
    # The Acquia Cloud database name.
    # On Acquia, the name of the database provisioned by default
    # is equal to the application name or site name.
    # Only mnually created databases have unique names.

cde-databases:
  - $DATABASE
  #- db2
  # Enter additional databases, if applicable

events:
  build:
    steps:
      - setup:
          type: script
          script:
            - echo "sitename = $SITENAME"
            - echo "environment = $ENVIRONMENT"
            - echo "database = $DATABASE"
            # Add Composer's local bin directory to the PATH so that we will be
            # running our installed versions of Drush, PHPCS, Behat, etc.
            - export PATH="$HOME/.composer/vendor/bin:$SOURCE_DIR/vendor/bin:$PATH"
            - composer validate --no-check-all --ansi --no-interaction
            - composer update
      - install:
          type: script
          script:
            - cd $SOURCE_DIR
            - mysql -u root -proot -e 'CREATE DATABASE drupal;'
            - lightning install 'mysql\://root:root@localhost/drupal' lightning 'http://127.0.0.1:8080'
      - test:
          type: script
          script:
            - cd $SOURCE_DIR/docroot
            - drush runserver --default-server=builtin 8080 &>/dev/null &
            - phantomjs --webdriver=4444 > /dev/null &
            - sleep 10
            - cd $SOURCE_DIR
            - behat --stop-on-failure --config .behat.yml --tags=~javascript
      - cleanup:
          type: script
          script:
            - cd $SOURCE_DIR
            # Setup settings file and codebase with minimum required for cloud.
            # Pass SITENAME to configureCloud function as optional subscription parameter.
            # See lightning_dev/Commands/RoboFile.php:533.
            - lightning configure:cloud $SITENAME
            # Remove the Drush binary and package so it doesn't interfere with
            # cloud versions. Doing this the proper way with Composer can cause
            # timeouts.
            - rm ./vendor/bin/drush
            - rm -rf ./vendor/drush

  post-deploy:
    steps:
      # Deploy the build artifact to an on-demand environment,
      # and sync the specified databases.
      - deploy:
          script:
            - pipelines-deploy
            - pipelines-sync-dbs $DATABASE
            # See https://docs.acquia.com/acquia-cloud/develop/pipelines/databases/
